# AgentScan Security Scanner - Environment Variables
# Copy this file to .env and configure your values

# === REQUIRED ENVIRONMENT VARIABLES ===
# These MUST be configured for the application to start

# Database Configuration (REQUIRED)
DB_PASSWORD=agentscan_dev_password

# JWT Authentication (REQUIRED) 
JWT_SECRET=kc7fBP3T2dzsU7hiOGzj2dDCACyoREKVBHqothNBQII=

# GitHub OAuth (REQUIRED)
GITHUB_CLIENT_ID=Ov23lix7VkYC8hFXCl0s
GITHUB_SECRET=381f1e80205966d8a72b9504991368f3d0a888f8

# === OPTIONAL ENVIRONMENT VARIABLES ===
# These have defaults but can be customized

# Server Configuration
SERVER_HOST=0.0.0.0
SERVER_PORT=8080
SERVER_READ_TIMEOUT=30s
SERVER_WRITE_TIMEOUT=30s
SERVER_IDLE_TIMEOUT=120s

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=agentscan
DB_USER=agentscan
DB_SSL_MODE=disable
DB_MAX_OPEN_CONNS=50
DB_MAX_IDLE_CONNS=10
DB_CONN_MAX_LIFETIME=5m
DB_CONN_MAX_IDLE_TIME=10m
DB_QUERY_TIMEOUT=30s
DB_STATEMENT_TIMEOUT=30s
DB_ENABLE_PREPARED_STMT=true

# Redis Configuration
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=10

# Security Agents Configuration
AGENTS_MAX_CONCURRENT=10
AGENTS_DEFAULT_TIMEOUT=10m
AGENTS_DOCKER_REGISTRY=
AGENTS_TEMP_DIR=/tmp/agentscan
AGENTS_MAX_MEMORY_MB=1024
AGENTS_MAX_CPU_CORES=1.0

# Additional Authentication
JWT_EXPIRATION=24h
GITLAB_CLIENT_ID=
GITLAB_SECRET=

# GitHub App Configuration (Optional)
GITHUB_APP_ID=0
GITHUB_PRIVATE_KEY=

# Supabase Configuration (for secrets management)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-anon-key-here
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here
SUPABASE_ENABLE_SECRETS=false

# Observe MCP Configuration (for debugging and monitoring)
OBSERVE_ENABLED=true
OBSERVE_ENDPOINT=https://agentscan.observeinc.com/v1
OBSERVE_API_KEY=your-observe-api-key-here
OBSERVE_PROJECT_ID=agentscan-backend
OBSERVE_ENVIRONMENT=development

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=json
LOG_OUTPUT=stdout

# === DIGITALOCEAN DEPLOYMENT NOTES ===
# For DigitalOcean App Platform:
# 1. Configure DATABASE_URL in app settings (managed PostgreSQL)
# 2. Configure REDIS_URL in app settings (managed Redis)
# 3. Set all REQUIRED variables in app environment settings
# 4. The app will automatically bind to PORT environment variable